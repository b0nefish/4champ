//
//  PlaylistSelectorViewController.swift
//  4champ
//
//  Created by Aleksi Sitomaniemi on 13.3.2020.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftUI

protocol PlaylistSelectorDisplayLogic: class
{
  func displaySelector(viewModel: PlaylistSelector.PrepareSelection.ViewModel)
  func displayAppend(viewModel: PlaylistSelector.Append.ViewModel)
}

class PlaylistSelectorStore: ObservableObject, PlaylistSelectorDisplayLogic
{
  var interactor: PlaylistSelectorBusinessLogic?
  var router: (NSObjectProtocol & PlaylistSelectorRoutingLogic & PlaylistSelectorDataPassing)?
  
  @Published var viewModel: PlaylistSelector.PrepareSelection.ViewModel
  
  init() {
    self.viewModel = PlaylistSelector.PrepareSelection.ViewModel(module: "<rnd>", playlistOptions: [])
    
  }
  
  // MARK: Setup
  func setup()
  {
    let viewController = self
    let interactor = PlaylistSelectorInteractor()
    let presenter = PlaylistSelectorPresenter()
    let router = PlaylistSelectorRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.dataStore = interactor
  }
  
  func doPrepare(mod: MMD)
  {
    let request = PlaylistSelector.PrepareSelection.Request(module: mod)
    interactor?.prepare(request: request)
  }
  
  func displaySelector(viewModel: PlaylistSelector.PrepareSelection.ViewModel)
  {
    self.viewModel = viewModel
  }
  
  func displayAppend(viewModel: PlaylistSelector.Append.ViewModel) {
    self.viewModel.progress = viewModel.progress
    self.viewModel.success = viewModel.success
  }
  
  func addToPlaylist(playlistIndex: Int) {
    interactor?.appendToPlaylist(request: PlaylistSelector.Append.Request(module: MMD(), playlistIndex: playlistIndex))
  }
}


